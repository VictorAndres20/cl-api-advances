import { Controller, Get, Post, Body, UseGuards, Res, HttpStatus, Put, Param } from '@nestjs/common';
import { HttpResponse } from '../../../commons/responses/http_response';
import { Response } from 'express';
import { BasicRestController } from '../../../commons/controllers/rest.controller';
import { AuthGuard } from '@nestjs/passport';
import { AdvancePeriod } from '../entity/advance_period.entity';
import { AdvancePeriodDTO } from '../entity/advance_period.dto';
import { AdvancePeriodService } from '../service/advance_period.service';

@Controller('advance-period')
@UseGuards(AuthGuard('jwt'))
export class AdvancePeriodController extends BasicRestController<AdvancePeriod, string, AdvancePeriodDTO>{

    constructor(protected service: AdvancePeriodService){super();}

    @Post('finish-create')
    async approve(@Res() res: Response, @Body() dto: AdvancePeriodDTO): Promise<void> {
        try{
            let data = await this.service.finishAndCreate(dto);
            res.status(HttpStatus.OK).json(new HttpResponse<AdvancePeriod>().setData(data).build(true));
        } catch(err){
            res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(new HttpResponse<AdvancePeriod>().setError(err.message).build(false));
        }
    }

    @Get('all/enterprise/:enterprise')
    async findAllByPeriod(
        @Res() res: Response,
        @Param('enterprise') enterprise: number,
        ): Promise<void> {
        try{
            let list = await this.service.findAllByEnterprise(enterprise);
            res.status(HttpStatus.OK).json(new HttpResponse<AdvancePeriod>().setList(list).build(true));
        } catch(err){
            res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(new HttpResponse<AdvancePeriod>().setError(err.message).build(false));
        }
    }
}

/** Generated by https://github.com/VictorAndres20 code generator for database, NestJS, React */