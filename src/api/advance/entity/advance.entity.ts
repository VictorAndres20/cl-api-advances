import { Entity, Column, PrimaryGeneratedColumn, PrimaryColumn, OneToMany, ManyToOne, JoinColumn } from 'typeorm';
import { Employee } from 'src/api/employee/entity/employee.entity'
import { AdvanceState } from 'src/api/advance_state/entity/advance_state.entity'
import { AdvancePeriod } from 'src/api/advance_period/entity/advance_period.entity';

@Entity({name:'advance'})
export class Advance{

    @PrimaryGeneratedColumn()
    uuid: string;

    @Column()
    created_date: Date;

    @Column()
    approved_date: Date;

    @Column()
    declined_date: Date;

    @Column()
    value: Number;

    @Column()
    cost: Number;

    @Column()
    use_fintech: Number;

    @ManyToOne(() => Employee, e => e.advances, {
        onDelete: "CASCADE",
        eager: true,
    })
    @JoinColumn({ name: "employee" })
    employee: Employee;

    @ManyToOne(() => AdvanceState, e => e.advances, {
        onDelete: "CASCADE",
        eager: true,
    })
    @JoinColumn({ name: "state" })
    state: AdvanceState;

    @ManyToOne(() => AdvancePeriod, e => e.advances, {
        onDelete: "CASCADE",
        eager: true,
    })
    @JoinColumn({ name: "period" })
    period: AdvancePeriod;

}

/** Generated by https://github.com/VictorAndres20 code generator for database, NestJS, React */