import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { Advance } from '../entity/advance.entity';
import { AdvanceService } from './advance.service';

@Injectable()
export class AdvanceBusiness extends AdvanceService{

    constructor(
        @InjectRepository(Advance)
        protected repo: Repository<Advance>,
    ) {super(repo);}

    async findAllByEmployeePaged(page: number = 0, limit: number = 4, employee: string): Promise<[Advance[], number]> {
        return await this.repo.findAndCount({ 
            where: { employee: { uuid: employee } }, 
            order: { created_date: 'DESC' }, 
            skip: page, take: limit
        });
    }

    async findAllByEnterprise(enterprise: number): Promise<Advance[]> {
        return await this.findMany({ 
            where: { employee: { range: { enterprise: { id: enterprise } } } }, 
            order: { created_date: 'DESC' }, 
            relations: { employee: { range: true } }
        });
    }

}

/** Generated by https://github.com/VictorAndres20 code generator for database, NestJS, React */