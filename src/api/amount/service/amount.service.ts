import { Injectable } from '@nestjs/common';
import { BasicCrudService } from '../../../commons/services/crud.service';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { Amount } from '../entity/amount.entity';
import { AmountDTO } from '../entity/amount.dto';

@Injectable()
export class AmountService extends BasicCrudService<Amount, string, AmountDTO>{

    constructor(
        @InjectRepository(Amount)
        protected repo: Repository<Amount>,
    ) {super();}

    findById(id: string): Promise<Amount>{
        try{
            return this.findOne({where: {uuid:id}});
        } catch(err){
            throw new Error(err.message);
        }
    }

    buildBaseCreation(dto: AmountDTO): Amount{
        //Validations data
        if(! dto) throw new Error('DTO empty');

        //Assign data
        let entity = new Amount();
        entity.value = dto.value;
        entity.cost = dto.cost;
        entity.active = dto.active;
        return entity;
    }

    async dataValidationBeforeCreate(dto: AmountDTO): Promise<void> {
        // Input validations for null values that are required
        // For example validate if not exists for specific(s) properties
        // Example same login, same email, same cod, same nit
    }

    buildBaseEdition(entity: Amount, dto: AmountDTO): Amount{
        //Validations data
        if(! dto) throw new Error('DTO empty');
        if(! dto.uuid) throw new Error('Entity id null');

        //Assign data
        entity.value = dto.value ? dto.value : entity.value;
        entity.cost = dto.cost ? dto.cost : entity.cost;
        entity.active = dto.active ? dto.active : entity.active;
        return entity;
    }

    async dataValidationBeforeEdit(dto: AmountDTO): Promise<void> {
        // Input validations for null values that are required
        // For example validate if not exists for specific(s) properties
        // Example same login, same email, same cod, same nit
    }

}

/** Generated by https://github.com/VictorAndres20 code generator for database, NestJS, React */