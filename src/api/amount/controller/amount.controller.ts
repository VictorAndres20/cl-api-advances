import { Controller, Get, Post, Body, HttpException, Param, UseGuards, Res, HttpStatus } from '@nestjs/common';
import { HttpResponse } from '../../../commons/responses/http_response';
import { BasicRestController } from '../../../commons/controllers/rest.controller';
import { AuthGuard } from '@nestjs/passport';
import { Response } from 'express';
import { Amount } from '../entity/amount.entity';
import { AmountBusiness } from '../service/amount.buisiness';
import { AmountDTO } from '../entity/amount.dto';

@Controller('amount')
@UseGuards(AuthGuard('jwt'))
export class AmountController extends BasicRestController<Amount, string, AmountDTO>{

    constructor(protected service: AmountBusiness){super();}

    @Get('employee/:employee')
    async findAllByEmployee(@Res() res: Response, @Param("employee") employee: string): Promise<void>{
        try{
            let list = await this.service.findAllByEmployee(employee);
            res.status(HttpStatus.OK).json(new HttpResponse<Amount>().setList(list).build(true));
        } catch(err){
            res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(new HttpResponse<Amount>().setError(err.message).build(false));
        }
    }

    @Get('enterprise/:enterprise')
    async findAllByEnterprise(@Res() res: Response, @Param("enterprise") enterprise: number): Promise<void>{
        try{
            let list = await this.service.findAllByEnterprise(enterprise);
            res.status(HttpStatus.OK).json(new HttpResponse<Amount>().setList(list).build(true));
        } catch(err){
            res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(new HttpResponse<Amount>().setError(err.message).build(false));
        }
    }

}

/** Generated by https://github.com/VictorAndres20 code generator for database, NestJS, React */