import { Entity, Column, PrimaryGeneratedColumn, PrimaryColumn, OneToMany, ManyToOne, JoinColumn } from 'typeorm';
import { Range } from 'src/api/range/entity/range.entity'
import { Bank } from 'src/api/bank/entity/bank.entity'
import { Advance } from 'src/api/advance/entity/advance.entity'
import { BankAccountType } from 'src/api/bank_account_type/entity/bank_account_type.entity';
import { Fintech } from 'src/api/fintech/entity/fintech.entity';

@Entity({name:'employee'})
export class Employee{

    @PrimaryGeneratedColumn()
    uuid: string;

    @Column()
    name: string;

    @Column()
    id: string;

    @Column()
    phone: string;

    @Column()
    salary: Number;

    @Column()
    password: string;

    @Column()
    state: Number;

    @Column()
    bank_account_number: string;

    @Column()
    fintech_account_number: string;

    @ManyToOne(() => Range, e => e.employees, {
        onDelete: "CASCADE",
        eager: true,
    })
    @JoinColumn({ name: "range" })
    range: Range;

    @ManyToOne(() => Bank, e => e.employees, {
        onDelete: "CASCADE",
        eager: true,
    })
    @JoinColumn({ name: "bank" })
    bank: Bank;

    @ManyToOne(() => BankAccountType, e => e.employees, {
        onDelete: "CASCADE",
        eager: true,
    })
    @JoinColumn({ name: "bank_account_type" })
    bank_account_type: BankAccountType;

    @ManyToOne(() => Fintech, e => e.employees, {
        onDelete: "CASCADE",
        eager: true,
    })
    @JoinColumn({ name: "fintech" })
    fintech: Fintech;

    @OneToMany(() => Advance, e => e.employee)
    advances: Advance[];

}

/** Generated by https://github.com/VictorAndres20 code generator for database, NestJS, React */