import { Controller, Get, Post, Body, HttpCode } from '@nestjs/common';
import { HttpResponse } from '../../../commons/responses/http_response';
import { LoginService } from '../service/login.service';
import { AuthDTO } from 'src/api/auth/entity/auth.dto';

@Controller('login')
export class LoginController {

    constructor(protected service: LoginService){}

    @Post('user')
    @HttpCode(200)
    async loginUser(@Body() dto: AuthDTO): Promise<HttpResponse<AuthDTO>> {
        try{
            let data = await this.service.loginUser(dto);
            return new HttpResponse<AuthDTO>().setData(data).build(true);
        } catch(err){
            return new HttpResponse<AuthDTO>().setError(err.message).build(false);
        }
    }

    @Post('employee')
    @HttpCode(200)
    async loginEmployee(@Body() dto: AuthDTO): Promise<HttpResponse<AuthDTO>> {
        try{
            let data = await this.service.loginEmployee(dto);
            return new HttpResponse<AuthDTO>().setData(data).build(true);
        } catch(err){
            return new HttpResponse<AuthDTO>().setError(err.message).build(false);
        }
    }

}

/** Generated by https://github.com/VictorAndres20 code generator for database, NestJS, React */